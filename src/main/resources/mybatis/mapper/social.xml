<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.SocialDao">
<select id="count" parameterType="String" resultType="int">
	select count(*)
	from social
	where mid=#{mid}
</select>

<insert id="insert" parameterType="social">
	<selectKey keyProperty="sno" resultType="int" order="BEFORE">
			select seq_sno.nextval from dual
	</selectKey>
	insert into social(sno, mid, ctno, stitle, scontent,
	 sthumbdata, sthumbtype, sthumbname, swritedate, sstartdate, 
	 sstarttime, sfee, smembercount, sstatus, saddress, sdeadline)
	 values(#{sno}, #{mid}, #{ctno}, #{stitle}, #{scontent}, 
	 #{sthumbData}, #{sthumbType}, #{sthumbName}, sysdate, #{sstartDate},
	 #{sstartTime}, #{sfee}, #{smemberCount}, #{sstatus}, #{saddress}, #{sdeadline})
</insert>

<select id="selectBySno" parameterType="int" resultType="social">
	select sno, mid, ctno, stitle, scontent, swritedate, sstartdate, 
	 sstarttime, sfee, smembercount, sstatus, saddress, sdeadline
	from social
	where sno=#{sno}
</select>

<select id="selectSocialListByParams" parameterType="Map" resultType="social">
	select rnum, sno, stitle, saddress, sfee, ctno
	from(
		select rownum as rnum, sno, stitle, saddress, sfee, ctno
		from(
			select sno, stitle, saddress, sfee, ctno
			from social
			where <![CDATA[sdeadline > sysdate and sstatus not in ('cancel')]]>
			<if test="ctno != null">
			 and ctno=#{ctno}
			</if>
			<choose>
				<when test="sort != null and sort.equals('deadline')">
					order by sdeadline, sstarttime
				</when>
				<otherwise>
					order by sno desc
				</otherwise>
			</choose>
		)
		where <![CDATA[ rownum <= #{pager.endRowNo}]]>
	)
	where <![CDATA[ rnum >= #{pager.startRowNo}]]> 
</select>

<select id="selectSthumbBySno" parameterType="int" resultType="social">
	select sthumbname, sthumbtype, sthumbdata
	from social
	where sno=#{sno}
</select>

<select id="countByCtno" parameterType="Map" resultType="int">
	select count(*)
	from social
	where <![CDATA[sdeadline > sysdate and sstatus not in ('cancel')]]>
	<if test="ctno != null">
	and ctno=#{ctno}
	</if>
</select>

<update id="updateSstatusBySno" parameterType="Map">
	update social set sstatus=#{sstatus}
	where sno=#{sno}
</update>

<select id="getMainSocial" resultType="Social">
	select sno, stitle, saddress, sfee, ctno, sstatus
	from social
	where <![CDATA[sdeadline > sysdate]]> and sstatus not in ('cancel')
	order by sno desc
</select>

<select id="selectSpayInfoBySno" parameterType="int" resultType="social">
	select sno, mid, stitle, sstartdate, sstarttime, saddress, sfee, sstatus, sdeadline, smembercount
	from social
	where sno=#{sno}
</select>

<select id="selectJoinHistoryByPager" parameterType="Map" resultType="social">
	select rnum, sno, stitle, saddress, sfee, ctno, sstatus, sdeadline
	from(
		select rownum as rnum, sno, stitle, saddress, sfee, ctno, sstatus, sdeadline
		from(
			select sno, stitle, saddress, sfee, ctno, sstatus, sdeadline
			from social
			where sstatus not in ('cancel') and sno in (
				select sno
				from sjoin
				where mid=#{mid}
			)
			order by sdeadline desc
		)
		where <![CDATA[ rownum <= #{pager.endRowNo}]]>
	)
	where <![CDATA[ rnum >= #{pager.startRowNo}]]>  
</select>

<select id="selectJoinHistoryCnt" parameterType="String" resultType="int">
	select count(*)
	from social
	where sstatus not in ('cancel') and sno in (
		select sno
		from sjoin
		where mid=#{mid}
	)
</select>

<select id="selectRecruitHistoryByPager" parameterType="Map" resultType="social">
	select rnum, sno, stitle, saddress, sfee, ctno, sstatus, sdeadline
	from(
		select rownum as rnum, sno, stitle, saddress, sfee, ctno, sstatus, sdeadline
		from(
			select sno, stitle, saddress, sfee, ctno, sstatus, sdeadline
			from social
			where sstatus not in ('cancel') and mid=#{mid}
			order by sdeadline desc
		)
		where <![CDATA[ rownum <= #{pager.endRowNo}]]>
	)
	where <![CDATA[ rnum >= #{pager.startRowNo}]]>  
</select>

<select id="selectRecruitHistoryCnt" parameterType="String" resultType="int">
	select count(*)
	from social
	where sstatus not in ('cancel') and mid=#{mid}
</select>

<select id="getApplyAssemble" parameterType="String" resultType="Social">
	select sno, stitle, saddress, sfee, sstatus, sdeadline
    from social
    where <![CDATA[ sdeadline > sysdate ]]> and sstatus not in ('cancel') 
	and sno in ( select sno from sjoin where mid=#{mid} )
          order by sdeadline desc
</select>

<select id="selectIsDeadlineBySno" parameterType="int" resultType="Date">
	select sdeadline
	from social
	where sno=#{sno}
</select>

<select id="selectSearchByStitle" parameterType="String" resultType="Social">
	select stitle, sthumbname, sthumbtype, sthumbdata, sno, saddress, sfee
	from social 
	where  
	(sstatus = 'recruitment' or sstatus = 'full')
	and stitle like '%${keyword}%'
	and sdeadline > TRUNC(SYSDATE)
</select>

</mapper>
